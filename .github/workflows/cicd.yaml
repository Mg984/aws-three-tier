name: Deploy to AWS with Terraform

on:
  push:
    branches:
      - main
permissions:
    contents: write
    id-token: write
jobs:
  deploy:
    runs-on: terraform
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            terraform_version: ${{ env.TF_VERSION }}
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


      - name: 'Install TFLint'
        run: |
          curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v${{ env.TFLINT_VERSION }}/tflint_linux_amd64.zip
          unzip tflint.zip -d /usr/local/bin/
          tflint --version

      - name: 'Install tfsec'
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v${{ env.TFSEC_VERSION }}/tfsec-linux-amd64
          chmod +x tfsec
          mv tfsec /usr/local/bin/
          tfsec --version

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Format'
        run: terraform fmt

      - name: 'Terraform Validate'
        run: terraform validate

      - name: 'TFLint'
        run: |
          tflint --init
          tflint

      - name: 'tfsec'
        run: tfsec .

      # - name: Terraform Plan
      #   run: terraform plan -out=tfplan

    #   - name: Terraform Apply
    #     run: terraform destroy -auto-approve tfplan
