name: Deploy to AWS with Terraform

on:
  push:
    branches:
      - main
permissions:
    contents: write
    id-token: write
jobs:
  deploy:
    runs-on: ubuntu-latest #terraform
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout repository.
        uses: actions/checkout@v2

      - name: Setup GitHub OIDC
        run: | 
           curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
           unzip awscliv2.zip
           sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update

      # - name: Configure AWS credentials using OIDC
      #   uses: aws-actions/configure-aws-credentials@v4
      #   with:
      #     role-to-assume: ${{ secrets.AWS_GITHUB_ROLE }}
      #     aws-region: ${{ secrets.AWS_REGION }}
      #     audience: sts.amazonaws.com
      # - run: aws sts get-caller-identity

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            # Removed role-to-assume as requested
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
            cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}


      # - name: 'Install TFLint'
      #   run: |
      #     curl -sLo tflint.zip https://github.com/terraform-linters/tflint/releases/download/v0.58.0/tflint_linux_arm64.zip                    
      #     unzip tflint.zip 
      #     ./tflint --version

      - name: 'Install tfsec'
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v1.28.11/tfsec-linux-amd64
          chmod +x tfsec
          ./tfsec --version

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Format'
        run: terraform fmt

      - name: 'Terraform Validate'
        run: terraform validate

      # - name: 'TFLint'
      #   run: |
      #     ./tflint --init
      #     ./tflint

      - name: 'tfsec'
        run: ./tfsec . || true

      - name: Terraform Plan
        run: terraform plan 

    #   - name: Terraform Apply
    #     run: terraform destroy -auto-approve tfplan
